


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ************************************
    2 00000000         ;                                        È«¾Ö±äÁ¿
    3 00000000         ;*******************************************************
                       ************************************
    4 00000000                 IMPORT           rt_thread_switch_interrupt_flag
    5 00000000                 IMPORT           rt_interrupt_from_thread
    6 00000000                 IMPORT           rt_interrupt_to_thread
    7 00000000         
    8 00000000         ;*******************************************************
                       ************************************
    9 00000000         ;                                          ³£Á¿
   10 00000000         ;*******************************************************
                       ************************************
   11 00000000         ;-------------------------------------------------------
                       ------------------------------------
   12 00000000         ;ÓĞ¹ØÄÚºËÍâÉè¼Ä´æÆ÷¶¨Òå¿É²Î¿¼¹Ù·½ÎÄµµ£ºSTM32F1xxx Cortex
                       -M3 programming manual
   13 00000000         ;ÏµÍ³¿ØÖÆ¿éÍâÉèSCBµØÖ··¶Î§£º0xE000ED00~0xE000ED3F
   14 00000000         ;-------------------------------------------------------
                       ------------------------------------
   15 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08  ;ÏòÁ¿±íÆ«ÒÆ¼Ä´æÆ÷
   16 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ;ÖĞ¶Ï¿ØÖÆ×´Ì¬¼Ä´æÆ÷
                                                            
   17 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20  ;ÏµÍ³ÓÅÏÈ¼¶¼Ä´æÆ÷
   18 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000  ;PendSVÓÅÏÈ¼¶Öµ(low
                                                            est)
   19 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ;´¥·¢PendSV excepti
                                                            onµÄÖµ
   20 00000000         
   21 00000000         ;*******************************************************
                       ************************************
   22 00000000         ;                                     ´úÂë²úÉúÖ¸Áî
   23 00000000         ;*******************************************************
                       ************************************
   24 00000000         
   25 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000                 THUMB
   27 00000000                 REQUIRE8
   28 00000000                 PRESERVE8
   29 00000000         
   30 00000000         ;/*
   31 00000000         ; *-----------------------------------------------------
                       ------------------------------------
   32 00000000         ; * º¯ÊıÔ­ĞÍ£ºvoid rt_hw_context_switch_to(rt_uint32_t t
                       o);
   33 00000000         ; * r0-->to
   34 00000000         ; * ¸Ãº¯ÊıÓÃÓÚ¿ªÆôµÚÒ»´ÎÏß³ÌÇĞ»»



ARM Macro Assembler    Page 2 


   35 00000000         ; *-----------------------------------------------------
                       ------------------------------------
   36 00000000         ; */
   37 00000000         
   38 00000000         rt_hw_context_switch_to
                               PROC
   39 00000000         
   40 00000000         ;µ¼³ört_hw_context_switch_to£¬ÈÃÆä¾ßÓĞÈ«¾ÖÊôĞÔ£¬¿ÉÒÔÔÚCÎ
                       Ä¼şÖĞµ÷ÓÃ
   41 00000000                 EXPORT           rt_hw_context_switch_to
   42 00000000         
   43 00000000         ;ÉèÖÃrt_interrupt_to_threadµÄÖµ
   44 00000000         ;½«rt_interrupt_to_threadµÄµØÖ·¼ÓÔØµ½r1
   45 00000000 4926            LDR              r1, =rt_interrupt_to_thread
   46 00000002         ;½«r0µÄÖµ´æ´¢µ½rt_interrupt_to_thread
   47 00000002 6008            STR              r0, [r1]
   48 00000004         
   49 00000004         ;ÉèÖÃrt_interrupt_from_threadµÄÖµÎª0£¬±íÊ¾Æô¶¯µÚÒ»´ÎÏß³Ì
                       ÇĞ»»
   50 00000004         ;½«rt_interrupt_from_threadµÄµØÖ·¼ÓÔØµ½r1
   51 00000004 4926            LDR              r1, =rt_interrupt_from_thread
   52 00000006         ;ÅäÖÃr0µÈÓÚ0
   53 00000006 F04F 0000       MOV              r0, #0x0
   54 0000000A         ;½«r0µÄÖµ´æ´¢µ½rt_interrupt_from_thread
   55 0000000A 6008            STR              r0, [r1]
   56 0000000C         
   57 0000000C         ;ÉèÖÃÖĞ¶Ï±êÖ¾Î»rt_thread_switch_interrupt_flagµÄÖµÎª1
   58 0000000C         ;½«rt_thread_switch_interrupt_flagµÄµØÖ·¼ÓÔØµ½r1
   59 0000000C 4925            LDR              r1, =rt_thread_switch_interrupt
_flag
   60 0000000E         ;ÅäÖÃr0µÈÓÚ1
   61 0000000E F04F 0001       MOV              r0, #1
   62 00000012         ;½«r0µÄÖµ´æ´¢µ½rt_thread_switch_interrupt_flag
   63 00000012 6008            STR              r0, [r1]
   64 00000014         
   65 00000014         ;ÉèÖÃPendSVÒì³£µÄÓÅÏÈ¼¶
   66 00000014 4824            LDR              r0, =NVIC_SYSPRI2
   67 00000016 F44F 017F       LDR              r1, =NVIC_PENDSV_PRI
   68 0000001A F8D0 2000       LDR.W            r2, [r0,#0x00] ;¶Á
   69 0000001E EA41 0102       ORR              r1,r1,r2    ;¸Ä
   70 00000022 6001            STR              r1, [r0]    ;Ğ´
   71 00000024         
   72 00000024         ;´¥·¢PendSVÒì³££¨²úÉúÉÏÏÂÎÄÇĞ»»£©
   73 00000024 4821            LDR              r0, =NVIC_INT_CTRL
   74 00000026 F04F 5180       LDR              r1, =NVIC_PENDSVSET
   75 0000002A 6001            STR              r1, [r0]
   76 0000002C         
   77 0000002C         ;¿ªÒì³££¬¿ªÖĞ¶Ï
   78 0000002C B661            CPSIE            F
   79 0000002E B662            CPSIE            I
   80 00000030         
   81 00000030         ;ÓÀÔ¶²»»áµ½ÕâÀï
   82 00000030                 ENDP
   83 00000030         
   84 00000030         
   85 00000030         ;/*
   86 00000030         ; *-----------------------------------------------------
                       ------------------------------------
   87 00000030         ; * void PendSV_Handler(void);



ARM Macro Assembler    Page 3 


   88 00000030         ; * r0-->switch from thread stack
   89 00000030         ; * r1-->switch to thread stack
   90 00000030         ; * psr, pc, lr, r12, r3, r2, r1, r0, are pushed into [f
                       rom] stack
   91 00000030         ; *-----------------------------------------------------
                       ------------------------------------
   92 00000030         ; */
   93 00000030         
   94 00000030         PendSV_Handler
                               PROC
   95 00000030                 EXPORT           PendSV_Handler
   96 00000030         
   97 00000030         ;½ûÓÃÖĞ¶Ï£¬ÎªÁË±£»¤ÉÏÏÂÎÄÇĞ»»²»±»ÖĞ¶Ï
   98 00000030 F3EF 8210       MRS              r2, PRIMASK
   99 00000034 B672            CPSID            I
  100 00000036         
  101 00000036         ;»ñÈ¡ÖĞ¶Ï±êÖ¾Î»£¬¿´¿´ÊÇ·ñÎª0
  102 00000036         ;¼ÓÔØrt_thread_switch_interrupt_flagµÄµØÖ·µ½r0
  103 00000036 481B            LDR              r0, =rt_thread_switch_interrupt
_flag
  104 00000038         ;¼ÓÔØrt_thread_switch_interrupt_flagµÄÖµµ½r1
  105 00000038 6801            LDR              r1, [r0]
  106 0000003A         ;ÅĞ¶Ïr1ÊÇ·ñÎª0£¬Îª0ÔòÌø×ªµ½pendsv_exit
  107 0000003A B191            CBZ              r1, pendsv_exit
  108 0000003C         
  109 0000003C         ;r1²»Îª0ÔòÇåÁã
  110 0000003C F04F 0100       MOV              r1, #0x00
  111 00000040         ;½«r1µÄÖµ´æ´¢µ½rt_thread_switch_interrupt_flag£¬¼´ÇåÁã
  112 00000040 6001            STR              r1, [r0]
  113 00000042         
  114 00000042         ;ÅĞ¶Ïrt_interrupt_from_threadµÄÖµÊÇ·ñÎª0
  115 00000042         ;¼ÓÔØrt_interrupt_from_threadµÄµØÖ·µ½r0
  116 00000042 4817            LDR              r0, =rt_interrupt_from_thread
  117 00000044         ;¼ÓÔØrt_interrupt_from_threadµÄÖµµ½r1
  118 00000044 6801            LDR              r1, [r0]
  119 00000046         ;ÅĞ¶Ïr1ÊÇ·ñÎª0£¬Îª0ÔòÌø×ªµ½switch_to_thread
  120 00000046         ;µÚÒ»´ÎÏß³ÌÇĞ»»Ê±rt_interrupt_from_thread¿Ï¶¨Îª0£¬ÔòÌø×ª
                       µ½switch_to_thread
  121 00000046 B129            CBZ              r1, switch_to_thread
  122 00000048         
  123 00000048         ;=============================================ÉÏÎÄ±£´æ==
                       ====================================
  124 00000048         ;µ±½øÈëPendSVC-Handler()Ê±£¬ÉÏÒ»¸öÏß³ÌÔËĞĞµÄ»·¾³¼´
  125 00000048         ;xPSR, PC£¨Ïß³ÌÈë¿ÚµØÖ·£©£¬r14, r12, r3, r2, r1, r0£¨Ïß³
                       ÌµÄĞÎ²Î£©
  126 00000048         ;ÕâĞ©CPU¼Ä´æÆ÷µÄÖµ»á×Ô¶¯±£´æµ½Ïß³ÌµÄÕ»ÖĞ£¬Ê£ÏÂµÄr4~r11Ğè
                       ÒªÊÖ¶¯±£´æ
  127 00000048         ;»ñÈ¡Ïß³ÌÕ»Ö¸Õëµ½r1
  128 00000048 F3EF 8109       MRS              r1, psp
  129 0000004C         ;½«CPUµÄ¼Ä´æÆ÷r4~r11µÄÖµ´æ´¢µ½r1Ö¸ÏòµÄµØÖ·£¨Ã¿²Ù×÷Ò»´ÎµØ
                       Ö·½«µİ¼õÒ»´Î£©
  130 0000004C E921 0FF0       STMFD            r1!, {r4- r11}
  131 00000050         ;¼ÓÔØr0µØÖ·Ö¸ÏòµÄÖµµ½r0£¬¼´r0=rt_interrupt_from_thread
  132 00000050 6800            LDR              r0, [r0]
  133 00000052         ;½«r1µÄÖµ´æ´¢µ½r0£¬¼´¸üĞÂÏß³ÌÕ»sp
  134 00000052 6001            STR              r1, [r0]
  135 00000054         
  136 00000054         ;=============================================ÏÂÎÄÇĞ»»==
                       ====================================



ARM Macro Assembler    Page 4 


  137 00000054         switch_to_thread
  138 00000054         ;¼ÓÔØrt_interrupt_to_threadµÄµØÖ·µ½r1
  139 00000054         ;rt_interrupt_to_threadÊÇÒ»¸öÈ«¾Ö±äÁ¿£¬ÀïÃæ±£´æµÄÊÇÏß³ÌÕ
                       »Ö¸ÕëspµÄÖ¸Õë
  140 00000054 4911            LDR              r1, =rt_interrupt_to_thread
  141 00000056         ;¼ÓÔØrt_interrupt_to_threadµÄÖµµ½r1£¬¼´spµÄÖ¸Õë
  142 00000056 6809            LDR              r1, [r1]
  143 00000058         ;¼ÓÔØrt_interrupt_to_threadµÄÖµµ½r1, ¼´sp
  144 00000058 6809            LDR              r1, [r1]
  145 0000005A         
  146 0000005A         ;½«Ïß³ÌÕ»Ö¸Õër1(²Ù×÷Ö®Ç°ÏÈµİ¼õ)Ö¸ÏòµÄÄÚÈİ¼ÓÔØµ½CPU¼Ä´æÆ÷
                       r4~r11
  147 0000005A E8B1 0FF0       LDMFD            r1!, {r4- r11}
  148 0000005E         ;½«Ïß³ÌÕ»µÄÖµ¸üĞÂµ½psp
  149 0000005E F381 8809       MSR              psp, r1
  150 00000062         
  151 00000062         pendsv_exit
  152 00000062         ;»Ö¸´ÖĞ¶Ï
  153 00000062 F382 8810       MSR              PRIMASK, r2
  154 00000066         
  155 00000066         ;È·±£Òì³£·µ»ØÊ¹ÓÃµÄÕ»Ö¸ÕëÊÇpsp£¬¼´lr¼Ä´æÆ÷µÄÎ»2ÒªÎª1
  156 00000066 F04E 0E04       ORR              lr, lr, #0x04
  157 0000006A         ;Òì³£·µ»Ø£¬Õâ¸öÊ±ºòÕ»ÖĞµÄÊ£ÏÂÄÚÈİ½«»á×Ô¶¯¼ÓÔØµ½CPU¼Ä´æÆ÷
                       £º
  158 0000006A         ;xPSR, PC£¨Ïß³ÌÈë¿ÚµØÖ·£©, r14, r12, r3, r2, r1, r0£¨Ïß³
                       ÌµÄĞÎ²Î£©
  159 0000006A         ;Í¬Ê±pspµÄÖµÒ²½«¸üĞÂ£¬¼´Ö¸ÏòÏß³ÌÕ»µÄÕ»¶¥
  160 0000006A 4770            BX               lr
  161 0000006C         
  162 0000006C         ;PendSV_Handler×Ó³ÌĞò½áÊø
  163 0000006C                 ENDP
  164 0000006C         
  165 0000006C         
  166 0000006C         ;/*
  167 0000006C         ; *-----------------------------------------------------
                       ------------------------------------
  168 0000006C         ; * void rt_hw_context_switch(rt_uint32_t from, rt_uint3
                       2_t to);
  169 0000006C         ; * r0-->from
  170 0000006C         ; * r1-->to
  171 0000006C         ; *-----------------------------------------------------
                       ------------------------------------
  172 0000006C         ; */
  173 0000006C         
  174 0000006C         rt_hw_context_switch
                               PROC
  175 0000006C                 EXPORT           rt_hw_context_switch
  176 0000006C         ;ÉèÖÃÖĞ¶Ï±êÖ¾Î»rt_thread_switch_interrupt_flagÎª1
  177 0000006C         ;¼ÓÔØrt_thread_switch_interrupt_flagµÄµØÖ·µ½r2
  178 0000006C 4A0D            LDR              r2, =rt_thread_switch_interrupt
_flag
  179 0000006E         ;¼ÓÔØrt_thread_switch_interrupt_flagµÄÖµµ½r3
  180 0000006E 6813            LDR              r3, [r2]
  181 00000070         ;r3Óë1±È½Ï£¬ÏàµÈÔòÖ´ĞĞBEQÖ¸Áî£¬·ñÔò²»Ö´ĞĞ
  182 00000070 2B01            CMP              r3, #1
  183 00000072 D004            BEQ              _reswitch
  184 00000074         ;ÉèÖÃr3µÄÖµÎª1
  185 00000074 F04F 0301       MOV              r3, #1
  186 00000078         ;½«r3µÄÖµ´æ´¢µ½rt_thread_switch_interrupt_flag£¬¼´ÖÃ1



ARM Macro Assembler    Page 5 


  187 00000078 6013            STR              r3, [r2]
  188 0000007A         
  189 0000007A         ;ÉèÖÃrt_interrupt_from_threadµÄÖµ
  190 0000007A         ;¼ÓÔØrt_interrupt_from_threadµÄµØÖ·µ½r2
  191 0000007A 4A09            LDR              r2, =rt_interrupt_from_thread
  192 0000007C         ;´æ´¢r0µÄÖµµ½rt_interrupt_from_thread£¬¼´ÉÏÒ»¸öÏß³ÌÕ»Ö¸Õ
                       ëspµÄÖ¸Õë
  193 0000007C 6010            STR              r0, [r2]
  194 0000007E         
  195 0000007E         _reswitch
  196 0000007E         ;ÉèÖÃrt_interrupt_to_threadµÄÖµ
  197 0000007E         ;¼ÓÔØrt_interrupt_to_threadµÄµØÖ·µ½r2
  198 0000007E 4A07            LDR              r2, =rt_interrupt_to_thread
  199 00000080         ;´æ´¢r1µÄÖµµ½rt_interrupt_to_thread£¬¼´ÏÂÒ»¸öÏß³ÌÕ»Ö¸Õës
                       pµÄÖ¸Õë
  200 00000080 6011            STR              r1, [r2]
  201 00000082         
  202 00000082         ;´¥·¢PendSVÒì³££¨²úÉúÉÏÏÂÎÄÇĞ»»£©
  203 00000082 480A            LDR              r0, =NVIC_INT_CTRL
  204 00000084 F04F 5180       LDR              r1, =NVIC_PENDSVSET
  205 00000088 6001            STR              r1, [r0]
  206 0000008A         ;×Ó³ÌĞò·µ»Ø
  207 0000008A 4770            BX               LR
  208 0000008C         ;×Ó³ÌĞò½áÊø
  209 0000008C                 ENDP
  210 0000008C         
  211 0000008C         
  212 0000008C         ;/*
  213 0000008C         ; *-----------------------------------------------------
                       ------------------------------------
  214 0000008C         ; * rt_base_t rt_hw_interrupt_disable();
  215 0000008C         ; *-----------------------------------------------------
                       ------------------------------------
  216 0000008C         ; */
  217 0000008C         rt_hw_interrupt_disable
                               PROC
  218 0000008C                 EXPORT           rt_hw_interrupt_disable
  219 0000008C F3EF 8010       MRS              r0, PRIMASK
  220 00000090 B672            CPSID            I
  221 00000092 4770            BX               LR
  222 00000094                 ENDP
  223 00000094         
  224 00000094         
  225 00000094         ;/*
  226 00000094         ; *-----------------------------------------------------
                       ------------------------------------
  227 00000094         ; * void rt_hw_interrupt_enable(rt_base_t level);
  228 00000094         ; *-----------------------------------------------------
                       ------------------------------------
  229 00000094         ; */
  230 00000094         rt_hw_interrupt_enable
                               PROC
  231 00000094                 EXPORT           rt_hw_interrupt_enable
  232 00000094 F380 8810       MSR              PRIMASK, r0
  233 00000098 4770            BX               LR
  234 0000009A                 ENDP
  235 0000009A         
  236 0000009A 00 00           ALIGN            4
  237 0000009C         



ARM Macro Assembler    Page 6 


  238 0000009C                 END
              00000000 
              00000000 
              00000000 
              E000ED20 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\cortext_rvds.d -o.\objects\cortext_rvds.o -I.\RTE\_Targe
t_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\P
ACK\ARM\CMSIS\5.6.0\Device\ARM\ARMCM3\Include --predefine="__UVISION_VERSION SE
TA 525" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\listing
s\cortext_rvds.lst ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000030

Symbol: PendSV_Handler
   Definitions
      At line 94 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 95 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: PendSV_Handler used once
_reswitch 0000007E

Symbol: _reswitch
   Definitions
      At line 195 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 183 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: _reswitch used once
pendsv_exit 00000062

Symbol: pendsv_exit
   Definitions
      At line 151 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 107 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: pendsv_exit used once
rt_hw_context_switch 0000006C

Symbol: rt_hw_context_switch
   Definitions
      At line 174 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 175 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 00000000

Symbol: rt_hw_context_switch_to
   Definitions
      At line 38 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 41 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: rt_hw_context_switch_to used once
rt_hw_interrupt_disable 0000008C

Symbol: rt_hw_interrupt_disable
   Definitions
      At line 217 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 218 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: rt_hw_interrupt_disable used once
rt_hw_interrupt_enable 00000094

Symbol: rt_hw_interrupt_enable



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 230 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 231 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: rt_hw_interrupt_enable used once
switch_to_thread 00000054

Symbol: switch_to_thread
   Definitions
      At line 137 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 121 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: switch_to_thread used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 16 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 73 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
      At line 203 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 19 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 74 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
      At line 204 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 18 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 67 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 17 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 66 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 15 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 5 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 51 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
      At line 116 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
      At line 191 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 6 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 45 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
      At line 140 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
      At line 198 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 4 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
   Uses
      At line 59 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
      At line 103 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s
      At line 178 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\cortext_rvds.s

3 symbols
352 symbols in table
